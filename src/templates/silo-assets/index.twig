{% extends "_layouts/elementindex" %}

{% set title = "Asset Manager"|t('silo') %}
{% set elementType = 'sitemill\\silo\\elements\\SiloAsset' %}
{% set settings = craft.app.getPlugins().getPlugin('silo').getSettings() %}

{% do view.registerAssetBundle("sitemill\\silo\\assetbundles\\SiloAssets") %}

{% set allowedFileExtensions = [] %}

{% for extension in craft.app.config.general.allowedFileExtensions %}
    {% set allowedFileExtensions = allowedFileExtensions|merge(["'." ~ extension ~ "'"]) %}
{% endfor %}


    {% block content %}
        {% if settings.assetsHandle != null %}
            {{ parent() }}
        {% else %}
            {{ "No asset volume selected in Digital Asset Manager's settings."|t('silo') }}
        {% endif %}
    {% endblock %}

{# Register buttons if asset volume selected #}

{% if settings.assetsHandle != null %}
    {# Register the buttons #}
    {% js %}
        (function($) {

        if (typeof Craft.Silo === 'undefined') {
        Craft.Silo = {};
        }

        var elementTypeClass = 'sitemill\\silo\\elements\\SiloAsset';

        Craft.Silo.SiloAssetIndex = Craft.BaseElementIndex.extend({
        afterInit: function() {
        // Hide the approval button
        var label = Craft.t('silo', 'Upload Assets');

        this.$newEventBtnGroup = $('<div class="btngroup submit"/>');
        this.$newEventBtn = $('<a id="upload-silo-assets" class="btn submit icon" data-icon="upload">' + label + '</a>').appendTo(this.$newEventBtnGroup);

        this.addButton(this.$newEventBtnGroup);

        this.base();
        },
        showActionTriggers: function() {
        this.base();
        if (this.$source.data('key') != 'staged')
        {
        $('#sitemill-silo-elements-actions-Approve-actiontrigger').hide();
        console.log($('#sitemill-silo-elements-actions-Approve-actiontrigger'))
        }
        }
        });

        // Register it!
        try {
        Craft.registerElementIndexClass(elementTypeClass, Craft.Silo.SiloAssetIndex);
        } catch (e) {
        // Already registered
        }

        })(jQuery);

    {% endjs %}

    {# Handle Uppy #}

    {% set volumeId = craft.app.volumes.volumeByHandle(settings.assetsHandle).id %}
    {% set folderId = craft.app.assets.rootFolderByVolumeId(volumeId).id %}

    {% js on ready %}
    {#  TODO: feed in folder ID from settings #}
       const uppy = new Uppy({
           meta: {
               'folderId': {{ folderId }}
           },
           restrictions: {
               maxFileSize:{{ craft.app.config.general.maxUploadFileSize }},
               minNumberOfFiles: null,
               allowedFileTypes: [{{ allowedFileExtensions|join(',')|raw }}]
           },
       })
       .use(Dashboard, {
            trigger: '#upload-silo-assets',
            closeModalOnClickOutside: true,
            proudlyDisplayPoweredByUppy: false,
            closeAfterFinish: true
       })
       .use(XHRUpload,{
            endpoint: '/silo/assets/upload',
            fieldName: 'assets-upload',
            headers: { 'X-CSRF-Token': '{{ craft.app.request.csrfToken }}' },
            timeout: 180 * 1000
       })
       uppy.on('complete', (result) => {
            $source = Craft.elementIndex.getSourceByKey('staged');
            Craft.elementIndex.selectSource($source);
            Craft.elementIndex.updateElements();
            console.log('Upload complete! Weâ€™ve uploaded these files:', result.successful)
            result.successful
            .forEach(
                element =>
                Craft.elementIndex.getElementById(394)
            );
       })

        // TODO: localisation
        // TODO: select recently updated with selectElementById https://github.com/craftcms/cms/blob/16acdf83625aa861fbbea8485bccb03fc01d2e95/src/web/assets/cp/src/js/BaseElementIndexView.js

    {% endjs %}
{% endif %}